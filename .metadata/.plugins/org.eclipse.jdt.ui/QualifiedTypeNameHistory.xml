<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.security.entities.Role"/>
    <fullyQualifiedTypeName name="com.security.service.JwtService"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationManager"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.UsernamePasswordAuthenticationToken"/>
    <fullyQualifiedTypeName name="lombok.Getter"/>
    <fullyQualifiedTypeName name="lombok.Setter"/>
    <fullyQualifiedTypeName name="lombok.AllArgsConstructor"/>
    <fullyQualifiedTypeName name="lombok.NoArgsConstructor"/>
    <fullyQualifiedTypeName name="com.security.controller.AuthenticationResponse"/>
    <fullyQualifiedTypeName name="com.security.controller.AuthenticationRequest"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RestController"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.web.filter.OncePerRequestFilter"/>
    <fullyQualifiedTypeName name="jakarta.annotation.Nonnull"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.services.JwtService"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.io.Decoders"/>
    <fullyQualifiedTypeName name="io.jsonwebtoken.security.Keys"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.config.JWTAuthenticationFilter"/>
    <fullyQualifiedTypeName name="org.springframework.security.authentication.AuthenticationProvider"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.repositories.UserRepo"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.services.AuthenticationService"/>
    <fullyQualifiedTypeName name="com.fasterxml.jackson.annotation.JsonIgnore"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.exceptions.ResourceNotFoundException"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.payloads.ApiException"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpMethod"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.entities.User"/>
    <fullyQualifiedTypeName name="org.springframework.security.crypto.password.PasswordEncoder"/>
    <fullyQualifiedTypeName name="org.springframework.data.jpa.repository.JpaRepository"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.entities.Role"/>
    <fullyQualifiedTypeName name="java.lang.RuntimeException"/>
    <fullyQualifiedTypeName name="java.lang.Integer"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.config.AppConstants"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.repositories.RoleRepo"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.RequestBody"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.payloads.UserDto"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.PostMapping"/>
    <fullyQualifiedTypeName name="com.gaurang.blog.services.UserService"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Autowired"/>
    <fullyQualifiedTypeName name="org.springframework.http.ResponseEntity"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="lombok.Data"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.config.annotation.EnableWebMvc"/>
    <fullyQualifiedTypeName name="java.lang.String"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="org.springdoc.core.models.GroupedOpenApi"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.OpenAPI"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.info.Info"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.security.SecurityRequirement"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.Components"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.security.SecurityScheme"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.security.SecurityScheme.Type"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.info.Contact"/>
    <fullyQualifiedTypeName name="org.springframework.security.access.prepost.PreAuthorize"/>
    <fullyQualifiedTypeName name="io.swagger.v3.oas.models.servers.Server"/>
    <fullyQualifiedTypeName name="java.util.List"/>
</qualifiedTypeNameHistroy>
